public class Subsidies: H3.SmartForm.Timer
    {
        public Subsidies() { }
        protected override void OnWork(H3.IEngine engine)
        {
            DateTime now = DateTime.Now;//获取当前时间
            DateTime sTime = DateTime.Parse(now.ToString("yyyy-MM-dd 00:00:00"));//获取今天的01点
            DateTime eTime = DateTime.Parse(now.ToString("yyyy-MM-dd 04:00:00"));//获取今天的05点
            DateTime sTime2 = DateTime.Parse(now.ToString("yyyy-MM-dd 01:00:00"));//获取今天的01点
            DateTime eTime2 = DateTime.Parse(now.ToString("yyyy-MM-dd 05:00:00"));//获取今天的05点
            if(sTime <= now && eTime >= now)//判断当前时间是否处于01点-05点间
            {
                //每天10点-14点间调用一次Execute_2方法（根据氚云定时器每隔4小时执行一次的规则，01点-05点间隔4小时，所以这个范围内必定会执行一次）
                //打开/关闭自动补贴充值
                dos(engine);
            }
            if(sTime2 <= now && eTime2 >= now)//判断当前时间是否处于01点-05点间
            {
                //每天10点-14点间调用一次Execute_2方法（根据氚云定时器每隔4小时执行一次的规则，01点-05点间隔4小时，所以这个范围内必定会执行一次）
                //打开/关闭自动补贴充值
                dos2(engine);
            }
        }
        public void dos(H3.IEngine engine)
        {
            string systemUserId = H3.Organization.User.SystemUserId;
            for(int j = 1;j <= 3;)
            {
                H3.DataModel.BizObjectSchema logSchema = engine.BizObjectManager.GetPublishedSchema("D154150RechargeTimer");
                H3.DataModel.BizObject log = new H3.DataModel.BizObject(engine, logSchema, systemUserId);
                log.CreatedBy = systemUserId;
                log.OwnerId = systemUserId;
                H3.DataModel.BulkCommit  fcommit = new H3.DataModel.BulkCommit();//补贴金额归零
                DateTime now = DateTime.Now;//获取当前时间
                H3.Data.Filter.Filter filter = new H3.Data.Filter.Filter(); //构建过滤器
                filter.FromRowNum = (j - 1) * 1000;
                filter.ToRowNum = j * 1000;
                H3.Data.Filter.And   andMatcher = new H3.Data.Filter.And();    //构造And匹配器
                andMatcher.Add(new H3.Data.Filter.ItemMatcher("startUsing", H3.Data.ComparisonOperatorType.Equal, "True"));  //添加筛选条件
                //andMatcher.Add(new H3.Data.Filter.ItemMatcher("isMoratorium", H3.Data.ComparisonOperatorType.Equal, "False"));//是否暂停补贴为否的
                filter.Matcher = andMatcher;
                H3.DataModel.BizObjectSchema schema = engine.BizObjectManager.GetPublishedSchema("D117502PersonnelInformation");   //获取模块Schema
                H3.DataModel.BizObject[] boArray = H3.DataModel.BizObject.GetList(engine, H3.Organization.User.SystemUserId,
                    schema, H3.DataModel.GetListScopeType.GlobalAll, filter); //查询返回的结果对象
                if(boArray != null && boArray.Length > 0)
                {
                    for(int i = 0;i < boArray.Length; i++)
                    {
                        H3.DataModel.BizObject bo = boArray[i];
                        //创建表单数据
                        //string systemUserId = H3.Organization.User.SystemUserId;
                        H3.DataModel.BizObjectSchema aSchema = engine.BizObjectManager.GetPublishedSchema("D117502SubsidyRecharge");
                        H3.DataModel.BizObject aBo = new H3.DataModel.BizObject(engine, aSchema, systemUserId);
                        //归零
                        aBo["EmployeeCode"] = bo["ObjectId"].ToString();//工号
                        aBo.CreatedBy = H3.Organization.User.SystemUserId;
                        aBo["EmployeeCode"] = bo["ObjectId"].ToString();//工号
                        aBo["phoneNumber"] = bo["CellPhone"].ToString();//手机号
                        aBo["EmployeeName"] = bo["staffName"].ToString();//姓名
                        aBo["BeforeRecharge"] = bo["subsidy"].ToString();
                        aBo["RechargeAmount"] = (0 - double.Parse(bo["subsidy"].ToString())).ToString();
                        aBo["AfterRecharge"] = "0";//
                        aBo["OwnerId"] = bo["OwnerId"].ToString();//工号
                        //时间
                        aBo["RechargeTime"] = now + string.Empty;
                        aBo["rechargeType"] = "归零";
                        aBo.Status = H3.DataModel.BizObjectStatus.Effective;
                        aBo.Create(fcommit);
                    }
                    string errorMsg = null;
                    fcommit.Commit(engine.BizObjectManager, out errorMsg);
                    log["CreatedTime"] = now.ToString();
                    log["Content"] = "第" + ((j * 1000).ToString()) + "条";
                    log["log"] = errorMsg;
                    log.Status = H3.DataModel.BizObjectStatus.Effective;
                    log.Create();
                }
                j++;
            }
        }

        public void dos2(H3.IEngine engine)
        {
            string systemUserId = H3.Organization.User.SystemUserId;
            for(int j = 1;j <= 3;)
            {
                H3.DataModel.BizObjectSchema logSchema = engine.BizObjectManager.GetPublishedSchema("D154150RechargeTimer");
                H3.DataModel.BizObject log = new H3.DataModel.BizObject(engine, logSchema, systemUserId);
                log.CreatedBy = systemUserId;
                log.OwnerId = systemUserId;
                H3.DataModel.BulkCommit  commit = new H3.DataModel.BulkCommit();//补贴金额充值
                DateTime now = DateTime.Now;//获取当前时间
                H3.Data.Filter.Filter filter = new H3.Data.Filter.Filter(); //构建过滤器
                filter.FromRowNum = (j - 1) * 1000;
                filter.ToRowNum = j * 1000;
                H3.Data.Filter.And   andMatcher = new H3.Data.Filter.And();    //构造And匹配器
                andMatcher.Add(new H3.Data.Filter.ItemMatcher("startUsing", H3.Data.ComparisonOperatorType.Equal, "True"));  //添加筛选条件
                //andMatcher.Add(new H3.Data.Filter.ItemMatcher("isMoratorium", H3.Data.ComparisonOperatorType.Equal, "False"));//是否暂停补贴为否的
                filter.Matcher = andMatcher;
                H3.DataModel.BizObjectSchema schema = engine.BizObjectManager.GetPublishedSchema("D117502PersonnelInformation");   //获取模块Schema
                H3.DataModel.BizObject[] boArray = H3.DataModel.BizObject.GetList(engine, H3.Organization.User.SystemUserId,
                    schema, H3.DataModel.GetListScopeType.GlobalAll, filter); //查询返回的结果对象
                if(boArray != null && boArray.Length > 0)
                {
                    for(int i = 0;i < boArray.Length; i++)
                    {
                        H3.DataModel.BizObject bo = boArray[i];
                        //创建表单数据
                        //string systemUserId = H3.Organization.User.SystemUserId;
                        H3.DataModel.BizObjectSchema aSchema = engine.BizObjectManager.GetPublishedSchema("D117502SubsidyRecharge");
                        H3.DataModel.BizObject Bo = new H3.DataModel.BizObject(engine, aSchema, systemUserId);
                        //充值
                        Bo.CreatedBy = H3.Organization.User.SystemUserId;
                        Bo["EmployeeCode"] = bo["ObjectId"].ToString();//工号
                        Bo["phoneNumber"] = bo["CellPhone"].ToString();//手机号
                        Bo["EmployeeName"] = bo["staffName"].ToString();//姓名
                        Bo["BeforeRecharge"] = bo["subsidy"].ToString();
                        if(bo["isMoratorium"].ToString() == "True")
                        {
                            Bo["RechargeAmount"] = "0";
                            Bo["AfterRecharge"] = "0";
                        } else
                        {
                            Bo["RechargeAmount"] = "10";
                            Bo["AfterRecharge"] = "10";
                        }
                        //时间
                        Bo["RechargeTime"] = now + string.Empty;
                        Bo["rechargeType"] = "充值";
                        Bo["OwnerId"] = bo["OwnerId"].ToString();//工号
                        Bo.Status = H3.DataModel.BizObjectStatus.Effective;
                        Bo.Create(commit);
                    }
                    string errorMsg = null;
                    commit.Commit(engine.BizObjectManager, out errorMsg);
                    log["CreatedTime"] = now.ToString();
                    log["Content"] = "第" + ((j * 1000).ToString()) + "条";
                    log["log"] = errorMsg;
                    log.Status = H3.DataModel.BizObjectStatus.Effective;
                    log.Create();
                }
                j++;
            }
        }
    }